@page "/"
@using SkoBlazorApp.Data
@inject CourseService CourseService;
@inject NavigationManager NavigationManager;


<h3 align="center">Мои курсы</h3>
<hr />
<div>
    <button class="btn btn-success" @onclick="@GoToAddCourse">
        <span class="oi oi-plus" aria-hidden="true"> Добавить курс</span>
    </button>
</div>
<br />
<div>
    Всего курсов: <b>@_countCourses</b> <br />
    Общее количество баллов: <b>@_allRating</b>
</div>
<hr />
<div>
    <select form="Category" class="form-control w-auto" @bind="@_course.Year">
        @foreach (var item in _listYears)
        {
            <option value="@item">@item</option>
        }
    </select>
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped table-dark">
        <thead class="thead-dark">
            <tr>
                <td class="font-weight-bold">
                    №
                </td>
                <td class="font-weight-bold">
                    Категория
                </td>
                <td class="font-weight-bold">
                    Название
                </td>
                <td class="font-weight-bold">
                    Дата создания
                </td>
                <td class="font-weight-bold">
                    Дата редактирования
                </td>
                <td class="font-weight-bold">
                    Баллы
                </td>
                <td class="font-weight-bold">
                    Оценивающий
                </td>
            </tr>
        </thead>
        <tbody>
            @if (_myCourses == null)
            {
                <tr>Загрузка...</tr>
            }
            else if (_myCourses.Count == 0)
            {
                <tr>Нет записей!</tr>
            }
            else
            {
                int number = 1;
                @foreach (Course course in _myCourses)
                {
                    <tr>
                        <td>
                            @number
                        </td>
                        <td>
                            @course.Category
                        </td>
                        <td>
                            @course.Title
                        </td>
                        <td>
                            @course.Date
                        </td>
                        <td>
                            @if (course.DateEdit != null)
                            {
                                @course.DateEdit
                            }
                            else
                            {
                                @ValueIsNull
                            }
                        </td>
                        <td>
                            @if (course.Evaluation != null)
                            {
                                @course.Evaluation
                            }
                            else
                            {
                                @ValueIsNull
                            }
                        </td>
                        <td>
                            @if (course.Evaluating != null)
                            {
                                @course.Evaluating
                            }
                            else
                            {
                                @ValueIsNull
                            }
                        </td>
                        <td>
                            <button class="btn btn-outline-info" @onclick="@(() => ViewCourse(course.Id))">
                                <span class="oi oi-browser" aria-hidden="true"> Просмотреть</span>
                            </button>
                        </td>
                        <td>
                            <button class="btn btn-outline-warning">
                                <span class="oi oi-pencil" aria-hidden="true" @onclick="@(() => EditCourse(course.Id))"> Редактировать</span>
                            </button>
                        </td>
                    </tr>
                    number++;
                }
            }
        </tbody>
    </table>
</div>

@code
{
    public string ValueIsNull { get; set; } = "-";

    List<Course> _myCourses;
    List<int> _listYears;
    Course _course = new Course();


    int _countCourses;
    string _allRating;

    protected override async Task OnInitializedAsync()
    {
        _listYears = CourseService.GetYears();
        _myCourses = await Task.Run(() => CourseService.GetCoursesByUserId(1));

        _countCourses = _myCourses.Count;


        _allRating = CourseService.AllRating(1);
    }

    async void GetCourseOnYear(ChangeEventArgs e)
    {
        _myCourses = await Task.Run(() => CourseService.GetCoursesByUserId(1, _course.Year));
    }


    void GoToAddCourse()
    {
        NavigationManager.NavigateTo("/AddCourse/");
    }
    void ViewCourse(int id)
    {
        NavigationManager.NavigateTo($"/ViewCourse/{id}");
    }
    void EditCourse(int id)
    {
        NavigationManager.NavigateTo($"/EditCourse/{id}");
    }

}
